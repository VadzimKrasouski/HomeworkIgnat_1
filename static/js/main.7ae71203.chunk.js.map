{"version":3,"sources":["SpeechBubble.module.css","Components/Qualities/Qualities.module.css","Components/Greeting/ListOfMembers.module.css","Components/Greeting/Input.module.css","App.module.css","img/react.jpeg","Components/SpeachBubble/Avatar.module.css","Components/SpeachBubble/Message.module.css","Components/Greeting/Greeting.module.css","Components/Greeting/Counter.module.css","Components/SpeachBubble/Avatar.jsx","SpeechBubble.jsx","Components/SpeachBubble/Message.jsx","Components/Qualities/Qualities.jsx","Components/Greeting/ListOfMembers.jsx","Components/Greeting/Button.jsx","Components/Greeting/Input.jsx","Components/Greeting/Counter.jsx","Components/Greeting/Greeting.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Avatar","className","styles","avatar","src","alt","SpeechBubble","speechBubble","name","message","time","Date","toLocaleTimeString","hour","minute","Message","container","Qualities","props","qualitiesItem","qualitits","map","q","index","activeClass","active","default","key","qualities","ListOfMembers","onEraseClick","eraseAllMembers","setState","listNotEmpty","listOfPeople","this","state","names","t","id","classStyle","nextNameId","hide","people","onClick","React","Component","Button","onButtonClick","onAddTaskClick","button","Input","error","text","newText","addMember","onTextChanged","e","currentTarget","value","onKeyPress","classNameForInput","input","onChange","type","Counter","counter","Greeting","newName","newNames","greeting","App","wrapper","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7ae71203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speechBubble\":\"SpeechBubble_speechBubble__2Imfq\",\"name\":\"SpeechBubble_name__nXPA_\",\"time\":\"SpeechBubble_time__3-tQc\",\"message\":\"SpeechBubble_message__2k70E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"Qualities_qualities__3q9NF\",\"active\":\"Qualities_active__2WNL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"people\":\"ListOfMembers_people__1Zkk2\",\"hide\":\"ListOfMembers_hide__1oFvv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__vmRs3\",\"error\":\"Input_error__2bPCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1vTpD\"};","module.exports = __webpack_public_path__ + \"static/media/react.ed2c3db6.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1g_uC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__Hm6xX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3bW2C\",\"counter\":\"Greeting_counter__1r95K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__3oBvs\"};","import React from 'react';\nimport avatar from \"../../img/react.jpeg\"\nimport styles from './Avatar.module.css'\n\nconst Avatar = () => {\n    return (\n        <div className={styles.avatar}>\n            <img src={avatar} alt=\"avatar\"/>\n        </div>\n    );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styles from './SpeechBubble.module.css'\n\nconst SpeechBubble = () => {\n    return (\n        <div className={styles.speechBubble}>\n            <div className={styles.name}>\n                <strong>Вадим Красовский</strong>\n            </div>\n            <div className={styles.message}>Привет. JavaScript - это маленькая Javaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff?</div>\n            <div className={styles.time}>\n                {new Date().toLocaleTimeString('ru-Ru', {hour: '2-digit', minute: '2-digit'})}\n            </div>\n        </div>\n    );\n};\n\nexport default SpeechBubble;\n","import React from 'react';\nimport Avatar from \"./Avatar\";\nimport SpeechBubble from \"../../SpeechBubble\";\nimport styles from \"./Message.module.css\";\n\nconst Message = () => {\n    return (\n        <div className={styles.container}>\n            <Avatar/>\n            <SpeechBubble/>\n        </div>\n    );\n};\n\n\nexport default Message;\n","import React from 'react';\nimport styles from './Qualities.module.css';\n\nconst Qualities = (props) => {\n\n\n    let qualitiesItem = props.qualitits.map((q,index) => {\n\n        // let activeClass = q.active ? styles.active : styles.default;\n        let activeClass = q === 'коммуннист' ? styles.active : styles.default;\n\n            // return <div className={activeClass}>{q.title}</div>\n            return <div key={index} className={activeClass}>{q}</div>\n\n    });\n\n    return (\n        <div className={styles.qualities}>\n            {qualitiesItem}\n        </div>);\n};\n\nexport default Qualities;\n","import React from 'react';\nimport styles from './ListOfMembers.module.css';\n\nclass ListOfMembers extends React.Component {\n\n    onEraseClick = () => {\n        this.props.eraseAllMembers();\n        this.setState({listNotEmpty: false})\n    }\n\n    render() {\n\n        let listOfPeople = this.props.state.names.map( t => <div key={t.id}>{t.name}</div> );\n\n        let classStyle = this.props.state.nextNameId === 0 ? styles.hide : null;\n\n        return (\n            <div>\n                <div className={styles.people}>{listOfPeople}</div>\n                <button className={classStyle} onClick={this.onEraseClick}>Erase All</button>\n            </div>\n        )\n    }\n}\n\nexport default ListOfMembers;","import React from 'react';\nimport styles from './Button.module.css';\n\nclass Button extends React.Component {\n\n    onButtonClick = () => {\n        this.props.onAddTaskClick();\n    }\n\n    render() {\n        return (\n            <div className={styles.button}>\n                <button onClick={this.onButtonClick}>Greeting</button>\n            </div>\n        )\n    }\n}\n\nexport default Button;","import React from 'react';\nimport styles from './Input.module.css';\nimport Button from \"./Button\";\n\nclass Input extends React.Component {\n\n    state = {\n        error: false,\n        text: \"\",\n    }\n\n    onAddTaskClick = () => {\n        let newText = this.state.text;\n        this.setState({text: \"\"});\n\n        if (newText === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            this.props.addMember(newText);\n        }\n    }\n\n\n    onTextChanged = (e) => {\n        this.setState({\n            error: false,\n            text: e.currentTarget.value})\n    }\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddTaskClick()\n        }\n    }\n\n    render() {\n\n        let classNameForInput = this.state.error ? styles.error : \"\";\n\n        return (\n            <div className={styles.input}>\n                <div>\n                    <input className={classNameForInput}\n                           onChange={this.onTextChanged}\n                           onKeyPress={this.onKeyPress}\n                           value={this.state.text} type='text'/>\n                </div>\n                <Button onAddTaskClick={this.onAddTaskClick}/>\n            </div>\n        )\n    }\n}\n\nexport default Input;","import React from 'react';\nimport styles from './Counter.module.css';\n\nclass Counter extends React.Component {\n\n    render() {\n        return (\n            <div className={styles.counter}>\n                <span>{this.props.counter}</span>\n            </div>\n        )\n    }\n}\n\nexport default Counter;","import React from 'react';\nimport styles from './Greeting.module.css';\nimport ListOfMembers from \"./ListOfMembers\";\nimport Input from \"./Input\";\nimport Counter from \"./Counter\";\n\n\nclass Greeting extends React.Component {\n\n    state = {\n        names: [],\n        nextNameId: 0,\n    }\n\n    addMember = (text) => {\n\n        this.setState({ nextNameId: this.state.nextNameId + 1});\n\n        let newName = {\n            id: this.state.nextNameId,\n            name: text,\n        };\n\n        let newNames = [...this.state.names, newName];\n        this.setState({names: newNames});\n        // alert(\"What's up, \" + newName.name + \"!\");\n    };\n\n    eraseAllMembers = () => {\n        this.setState({names: [], nextNameId: 0})\n    }\n\n    render() {\n        return (\n            <div className={styles.greeting}>\n                <Counter counter={this.state.nextNameId}/>\n                <Input addMember={this.addMember}/>\n                <ListOfMembers state={this.state} eraseAllMembers={this.eraseAllMembers}/>\n            </div>\n        );\n    }\n}\n\nexport default Greeting;\n\n\n\n\n","import React from 'react';\nimport styles from './App.module.css';\nimport Message from \"./Components/SpeachBubble/Message\";\nimport Qualities from \"./Components/Qualities/Qualities\";\nimport Greeting from \"./Components/Greeting/Greeting\";\n\nconst App = () => {\n    let qualities = ['рационалист', 'коммуннист', 'анимешник'];\n    // let qualities = [\n    //     {\n    //         title: 'aaa',\n    //         id: 1\n    //     },\n    //     {\n    //         title: 'abbbaa',\n    //         id: 2\n    //     }\n    // ];\n    return (\n        <div className={styles.wrapper}>\n            <Message />\n            <Qualities qualitits={qualities}/>\n            <Greeting/>\n        </div>);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}